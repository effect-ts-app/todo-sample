{
  "openapi": "3.0.0",
  "info": {
    "title": "@effect-ts-demo/todo-api",
    "version": "0.0.1"
  },
  "tags": [
    {
      "name": "Me",
      "description": "Everything Logged In User related"
    },
    {
      "name": "Tasks",
      "description": "Everything Tasks related"
    },
    {
      "name": "Lists",
      "description": "Everything about the Task Lists"
    },
    {
      "name": "Groups",
      "description": "Everything about the Task List Group"
    }
  ],
  "paths": {
    "/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "operationId": "GetMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/tasks/search": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "SearchTasks",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "$select": {
                    "items": {
                      "enum": [
                        "id",
                        "createdBy",
                        "listId",
                        "createdAt",
                        "updatedAt",
                        "auditLog",
                        "title",
                        "assignedTo",
                        "attachment",
                        "completed",
                        "due",
                        "note",
                        "isFavorite",
                        "steps",
                        "categories",
                        "myDay",
                        "reminder"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "$count": {
                    "type": "boolean"
                  },
                  "$skip": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "$top": {
                    "minimum": 0,
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/DynamicTaskView"
                      },
                      "type": "array"
                    },
                    "count": {
                      "minimum": 0,
                      "type": "number"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "GetTasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of Tasks",
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "CreateTask",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "listId": {
                    "oneOf": [
                      {
                        "format": "uuid",
                        "type": "string"
                      },
                      {
                        "enum": [
                          "inbox"
                        ],
                        "type": "string"
                      }
                    ]
                  },
                  "title": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "isFavorite": {
                    "type": "boolean"
                  },
                  "myDay": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  }
                },
                "required": [
                  "listId",
                  "title",
                  "isFavorite",
                  "myDay"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "FindTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task",
                  "optionFromNull": true
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "description": "You can optionally update selected fields of the Task",
        "summary": "Update a Task",
        "operationId": "UpdateTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "completed": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  },
                  "isFavorite": {
                    "type": "boolean"
                  },
                  "due": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  },
                  "note": {
                    "minLength": 1,
                    "maxLength": 2047,
                    "type": "string",
                    "optionFromNull": true
                  },
                  "steps": {
                    "items": {
                      "$ref": "#/components/schemas/Step"
                    },
                    "type": "array"
                  },
                  "assignedTo": {
                    "minLength": 1,
                    "type": "string",
                    "optionFromNull": true
                  },
                  "attachment": {
                    "properties": {
                      "fileName": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                      },
                      "mimetype": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 1,
                        "maxLength": 2047,
                        "type": "string"
                      }
                    },
                    "required": [
                      "fileName",
                      "mimetype",
                      "url"
                    ],
                    "type": "object",
                    "optionFromNull": true
                  },
                  "myDay": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  },
                  "reminder": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "RemoveTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/lists/{listId}/tasks": {
      "post": {
        "tags": [
          "Lists"
        ],
        "operationId": "CreateTask2",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "enum": [
                    "inbox"
                  ],
                  "type": "string"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "isFavorite": {
                    "type": "boolean"
                  },
                  "myDay": {
                    "format": "date-time",
                    "type": "string",
                    "optionFromNull": true
                  }
                },
                "required": [
                  "title",
                  "isFavorite",
                  "myDay"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/lists/{id}": {
      "patch": {
        "tags": [
          "Lists"
        ],
        "operationId": "UpdateTaskList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      },
      "delete": {
        "tags": [
          "Lists"
        ],
        "operationId": "RemoveTaskList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/lists/{id}/order": {
      "post": {
        "tags": [
          "Lists"
        ],
        "operationId": "UpdateTaskListOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "enum": [
                    "inbox"
                  ],
                  "type": "string"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "order": {
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "order"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/lists/{id}/members": {
      "post": {
        "tags": [
          "Lists"
        ],
        "operationId": "AddTaskListMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "memberId": {
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "memberId"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/lists/{id}/members/{memberId}": {
      "delete": {
        "tags": [
          "Lists"
        ],
        "operationId": "RemoveTaskListMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/groups/{id}": {
      "patch": {
        "tags": [
          "Groups"
        ],
        "operationId": "UpdateTaskListGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "minLength": 1,
                    "maxLength": 255,
                    "type": "string"
                  },
                  "lists": {
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "TaskListEntry": {
        "title": "TaskListEntry",
        "properties": {
          "_tag": {
            "enum": [
              "TaskList"
            ],
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "parentListId": {
            "format": "uuid",
            "type": "string",
            "optionFromNull": true
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "order": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "_tag",
          "title",
          "parentListId",
          "id",
          "order"
        ],
        "type": "object"
      },
      "TaskListEntryGroup": {
        "title": "TaskListEntryGroup",
        "properties": {
          "_tag": {
            "enum": [
              "TaskListGroup"
            ],
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "lists": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "_tag",
          "id",
          "title",
          "lists"
        ],
        "type": "object"
      },
      "Me": {
        "title": "Me",
        "properties": {
          "name": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "phoneNumber": {
            "format": "phone",
            "type": "string"
          },
          "inboxOrder": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "lists": {
            "items": {
              "title": "TaskListEntryOrGroup",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaskListEntry"
                },
                {
                  "$ref": "#/components/schemas/TaskListEntryGroup"
                }
              ],
              "discriminator": {
                "propertyName": "_tag"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "email",
          "phoneNumber",
          "inboxOrder",
          "lists"
        ],
        "type": "object"
      },
      "TaskCreated": {
        "title": "TaskCreated",
        "properties": {
          "_tag": {
            "enum": [
              "TaskCreated"
            ],
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "_tag",
          "id",
          "createdAt",
          "userId"
        ],
        "type": "object"
      },
      "TaskFileAdded": {
        "title": "TaskFileAdded",
        "properties": {
          "_tag": {
            "enum": [
              "TaskFileAdded"
            ],
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "fileName": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "_tag",
          "id",
          "createdAt",
          "userId",
          "fileName"
        ],
        "type": "object"
      },
      "Step": {
        "title": "Step",
        "properties": {
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "completed"
        ],
        "type": "object"
      },
      "DynamicTaskView": {
        "title": "DynamicTaskView",
        "description": "The available properties depend on $select. if $select is omitted, all properties will be available",
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "createdBy": {
            "minLength": 1,
            "type": "string"
          },
          "listId": {
            "oneOf": [
              {
                "format": "uuid",
                "type": "string"
              },
              {
                "enum": [
                  "inbox"
                ],
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "auditLog": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaskCreated"
                },
                {
                  "$ref": "#/components/schemas/TaskFileAdded"
                }
              ],
              "discriminator": {
                "propertyName": "_tag"
              }
            },
            "type": "array"
          },
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "assignedTo": {
            "minLength": 1,
            "type": "string",
            "optionFromNull": true
          },
          "attachment": {
            "properties": {
              "fileName": {
                "minLength": 1,
                "maxLength": 255,
                "type": "string"
              },
              "mimetype": {
                "minLength": 1,
                "maxLength": 255,
                "type": "string"
              },
              "url": {
                "minLength": 1,
                "maxLength": 2047,
                "type": "string"
              }
            },
            "required": [
              "fileName",
              "mimetype",
              "url"
            ],
            "type": "object",
            "optionFromNull": true
          },
          "completed": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "due": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "note": {
            "minLength": 1,
            "maxLength": 2047,
            "type": "string",
            "optionFromNull": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/Step"
            },
            "type": "array"
          },
          "myDay": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "reminder": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          }
        },
        "type": "object"
      },
      "Task": {
        "title": "Task",
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "createdBy": {
            "minLength": 1,
            "type": "string"
          },
          "listId": {
            "oneOf": [
              {
                "format": "uuid",
                "type": "string"
              },
              {
                "enum": [
                  "inbox"
                ],
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "auditLog": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TaskCreated"
                },
                {
                  "$ref": "#/components/schemas/TaskFileAdded"
                }
              ],
              "discriminator": {
                "propertyName": "_tag"
              }
            },
            "type": "array"
          },
          "title": {
            "minLength": 1,
            "maxLength": 255,
            "type": "string"
          },
          "assignedTo": {
            "minLength": 1,
            "type": "string",
            "optionFromNull": true
          },
          "attachment": {
            "properties": {
              "fileName": {
                "minLength": 1,
                "maxLength": 255,
                "type": "string"
              },
              "mimetype": {
                "minLength": 1,
                "maxLength": 255,
                "type": "string"
              },
              "url": {
                "minLength": 1,
                "maxLength": 2047,
                "type": "string"
              }
            },
            "required": [
              "fileName",
              "mimetype",
              "url"
            ],
            "type": "object",
            "optionFromNull": true
          },
          "completed": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "due": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "note": {
            "minLength": 1,
            "maxLength": 2047,
            "type": "string",
            "optionFromNull": true
          },
          "isFavorite": {
            "type": "boolean"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/Step"
            },
            "type": "array"
          },
          "myDay": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          },
          "reminder": {
            "format": "date-time",
            "type": "string",
            "optionFromNull": true
          }
        },
        "required": [
          "id",
          "createdBy",
          "listId",
          "createdAt",
          "updatedAt",
          "auditLog",
          "title",
          "assignedTo",
          "attachment",
          "completed",
          "due",
          "note",
          "isFavorite",
          "steps",
          "categories",
          "myDay",
          "reminder"
        ],
        "type": "object"
      }
    },
    "parameters": {}
  }
}