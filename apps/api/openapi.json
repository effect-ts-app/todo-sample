{
  "openapi": "3.0.0",
  "info": {
    "title": "@effect-ts-demo/todo-api",
    "version": "0.0.1"
  },
  "paths": {
    "/tasks": {
      "get": {
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "NonEmptyString",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Task"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "myDay": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              }
                            },
                            "required": [
                              "myDay"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isFavorite": {
                    "type": "boolean"
                  },
                  "listId": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "uuid"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "inbox"
                        ]
                      }
                    ]
                  },
                  "myDay": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "title": "NonEmptyString",
                    "minLength": 1
                  }
                },
                "required": [
                  "isFavorite",
                  "listId",
                  "myDay",
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/tasks/:id": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Task"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "myDay": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        }
                      },
                      "required": [
                        "myDay"
                      ]
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignedTo": {
                    "type": "number",
                    "title": "PositiveInt",
                    "minimum": 0,
                    "nullable": true
                  },
                  "completed": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "due": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "isFavorite": {
                    "type": "boolean"
                  },
                  "myDay": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "note": {
                    "type": "string",
                    "title": "NonEmptyString",
                    "minLength": 1,
                    "nullable": true
                  },
                  "reminder": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Step"
                    }
                  },
                  "title": {
                    "type": "string",
                    "title": "NonEmptyString",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          },
          "404": {
            "description": "NotFoundError"
          }
        }
      }
    },
    "/tasks-order": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "uuid"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "inbox"
                        ]
                      }
                    ]
                  },
                  "order": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "listId",
                  "order"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    },
    "/me": {
      "get": {
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "NonEmptyString",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inboxOrder": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "_tag": {
                                "type": "string",
                                "enum": [
                                  "TaskListGroup"
                                ]
                              },
                              "id": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "inbox"
                                    ]
                                  }
                                ]
                              },
                              "title": {
                                "type": "string",
                                "title": "NonEmptyString",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "_tag",
                              "id",
                              "title"
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "inbox"
                                        ]
                                      }
                                    ]
                                  },
                                  "order": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "_tag": {
                                    "type": "string",
                                    "enum": [
                                      "TaskList"
                                    ]
                                  },
                                  "parentListId": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "inbox"
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "title": "NonEmptyString",
                                    "minLength": 1
                                  }
                                },
                                "required": [
                                  "_tag",
                                  "parentListId",
                                  "title"
                                ]
                              }
                            ]
                          }
                        ],
                        "discriminator": {
                          "propertyName": "_tag"
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "title": "NonEmptyString",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "inboxOrder",
                    "lists",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "ValidationError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {},
    "schemas": {
      "Step": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "title": "NonEmptyString",
            "minLength": 1
          }
        },
        "required": [
          "completed",
          "title"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "assignedTo": {
            "type": "number",
            "title": "PositiveInt",
            "minimum": 0,
            "nullable": true
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number",
            "title": "PositiveInt",
            "minimum": 0
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "listId": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string",
                "enum": [
                  "inbox"
                ]
              }
            ]
          },
          "note": {
            "type": "string",
            "title": "NonEmptyString",
            "minLength": 1,
            "nullable": true
          },
          "reminder": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          },
          "title": {
            "type": "string",
            "title": "NonEmptyString",
            "minLength": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "assignedTo",
          "completed",
          "createdAt",
          "createdBy",
          "due",
          "id",
          "isFavorite",
          "listId",
          "note",
          "reminder",
          "steps",
          "title",
          "updatedAt"
        ]
      }
    },
    "parameters": {}
  }
}